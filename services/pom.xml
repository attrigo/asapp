<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.bcn.asapp</groupId>
        <artifactId>asapp-parent</artifactId>
        <version>0.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>asapp-services</artifactId>
    <version>0.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>asapp-services</name>
    <description>ASAPP services</description>

    <properties>
        <!-- Dependencies Versions -->
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <springdoc-openapi-starter.version>2.5.0</springdoc-openapi-starter.version>
        <mockserver.version>1.19.8</mockserver.version>
        <mockserver-netty.version>5.15.0</mockserver-netty.version>

        <!-- Plugins Versions -->
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Compile Dependencies -->
            <!-- * ASAPP Dependencies -->
            <dependency>
                <groupId>com.bcn.asapp</groupId>
                <artifactId>asapp-commons-dto</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bcn.asapp</groupId>
                <artifactId>asapp-commons-url</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.bcn.asapp</groupId>
                <artifactId>asapp-rest-clients</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- * Org Dependencies -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi-starter.version}</version>
            </dependency>

            <!-- Test Dependencies -->
            <!-- * Org Dependencies -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mockserver</artifactId>
                <version>${mockserver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-netty</artifactId>
                <version>${mockserver-netty.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven Plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Spring Plugins -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <image>
                            <env>
                                <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                            </env>
                            <createdDate>${maven.build.timestamp}</createdDate>
                        </image>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-info-file</id>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                            <configuration>
                                <additionalProperties>
                                    <encoding>${project.build.sourceEncoding}</encoding>
                                    <java>${java.version}</java>
                                </additionalProperties>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Org Plugins -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>merge-coverage-reports</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.build.directory}/coverage-reports</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.build.directory}/coverage-reports/aggregate.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-merge-coverage-reports</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/aggregate.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <configuration>
                        <propertyFile>src/main/resources/liquibase/config/mvn-liquibase.properties</propertyFile>
                        <changeLogFile>src/main/resources/liquibase/db/changelog/db.changelog-master.xml</changeLogFile>
                        <migrationSqlOutputFile>src/main/resources/liquibase/output/migrationSqlOutput.sql
                        </migrationSqlOutputFile>
                        <outputFileEncoding>UTF-8</outputFileEncoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <modules>
        <module>asapp-authorization-service</module>
        <module>asapp-projects-service</module>
        <module>asapp-tasks-service</module>
    </modules>

</project>
