version: '3.8'
services:
  # Database services
  asapp-projects-postgres-db:
    image: 'postgres:latest'
    container_name: asapp-projects-postgres-db
    restart: unless-stopped
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_DB=projectsdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=secret
    volumes:
      - projects-postgres-db-data:/data/db
  asapp-tasks-postgres-db:
    image: 'postgres:latest'
    container_name: asapp-tasks-postgres-db
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=tasksdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=secret
    volumes:
      - tasks-postgres-db-data:/data/db

  # Services
  asapp-projects-service:
    build: .
    image: 'asapp-projects-service:0.1.0-SNAPSHOT'
    container_name: asapp-projects-service
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      - DB_HOST=asapp-projects-postgres-db
      - DB_PORT=5432
      - DB_NAME=projectsdb
      - DB_USERNAME=user
      - DB_PASSWORD=secret
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - asapp-projects-postgres-db
  asapp-tasks-service:
    build: .
    image: 'asapp-tasks-service:0.1.0-SNAPSHOT'
    container_name: asapp-tasks-service
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      - DB_HOST=asapp-tasks-postgres-db
      - DB_PORT=5432
      - DB_NAME=tasksdb
      - DB_USERNAME=user
      - DB_PASSWORD=secret
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - asapp-tasks-postgres-db

volumes:
  projects-postgres-db-data:
  tasks-postgres-db-data:
